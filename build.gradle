plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

group 'io.github.viepovsky'
version '2.0.2'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.github.viepovsky'
            artifactId = 'pesel'
            version = "2.0.2"
            from components.java

            pom {
                name = 'PESEL'
                description = 'Library for validating, decoding and generating PESEL'
                url = 'https://github.com/viepovsky/PESEL'
                inceptionYear = '2023'


                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/license/mit/'
                    }
                }

                developers {
                    developer {
                        id = 'viepovsky'
                        name = 'Oskar Rajzner'
                        email = 'o.rajzner@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/viepovsky/PESEL.git'
                    developerConnection = 'scm:git:ssh:https://github.com/viepovsky/PESEL.git'
                    url = 'https://github.com/viepovsky/PESEL'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["ossrhUsername"]
                password = project.properties["ossrhPassword"]
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
